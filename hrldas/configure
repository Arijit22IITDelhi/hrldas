#!/usr/bin/perl

  if($#ARGV == 0) {
     $response = shift(@ARGV) ;
     print("Configure HRLDAS: $response \n");
  }else {
     print "Please select from following supported architectures: \n\n";

     print "   1. Linux PGI compiler serial \n";
     print "   2. Linux PGI compiler MPI \n";
     print "   3. Linux ifort compiler serial \n";
     print "   4. Linux ifort compiler MPI      \n";
     print "   5. Linux gfortran compiler serial \n";
     print "   6. Linux gfortran compiler MPI \n";
     print "   7. Linux gfortran compiler MPI for Docker container \n";
     print "   0. exit only \n";

     printf "\nEnter selection [%d-%d] : ",1,7 ;

     $response = <STDIN> ;
     chop($response);
  }

  use Switch;
  switch ($response) {
     case 1 { 
              # serial PGI 
              system "cp arch/user_build_options.pgi.serial user_build_options"; 
            }

     case 2 {
              # MPI PGI 
              system "cp arch/user_build_options.pgi.mpi user_build_options"; 
            }

     case 3 {
              # serial ifort
              system "cp arch/user_build_options.ifort.serial user_build_options"; 
            }

     case 4 {
              # MPI ifort
              system "cp arch/user_build_options.ifort.mpi user_build_options"; 
            }

     case 5 {
              # serial GFORTRAN
              system "cp arch/user_build_options.gfortran.serial user_build_options"; 
            }

     case 6 {
              # MPI GFORTRAN
              system "cp arch/user_build_options.gfortran.mpi user_build_options";
            }

     case 7 {
              # MPI GFORTRAN for Docker container
              system "cp arch/user_build_options.gfortran.mpi.container user_build_options";
            }

     else   {print "no selection $response\n"; last} 
  }

  print "The user_build_options file used for compiling source code has been successfully generated. \n";
  print "Please check and change the software package path in the generated user_build_options file before compiling! \n";
